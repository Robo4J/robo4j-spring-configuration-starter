plugins {
    id 'java'
    id 'idea'
    id 'maven'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '5.1.0' apply false
}


def configureShadow(Project p) {
    p.apply plugin: 'com.github.johnrengelman.shadow'

    p.tasks.shadowJar {
        baseName = p.name
        classifier = ''
    }

    p.tasks.jar.finalizedBy p.tasks.shadowJar
}

def configureExampleSources(Project p) {
    p.sourceSets {
        main {
            java {
                srcDirs += 'src/examples/java'
            }
            resources {
                srcDirs += 'src/examples/resources'
            }
        }
    }
}

apply plugin: 'java-library'

compileJava.options*.compilerArgs = [
        "-Xlint:unchecked", "-Xlint:rawtypes", "-Xlint:deprecation"
]

compileTestJava.options*.compilerArgs = [
        "-Xlint:deprecation", "-Xlint:unchecked", "-Xlint:rawtypes",
]

sourceCompatibility = "${javaVersion}"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    implementation "com.robo4j:robo4j-core:${robo4jVersion}"
    implementation "org.springframework:spring-core:${springCoreVersion}"
    implementation "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
        exceptionFormat "full"
    }
    systemProperty "java.net.preferIPv4Stack", "true"
}

configureExampleSources(project)
configureShadow(project)
